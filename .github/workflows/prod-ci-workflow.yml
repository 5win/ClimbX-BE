name: Prod CI Workflow

on:
  workflow_dispatch:

  pull_request:
    branches: [ "main"]

jobs:
  continuous-integration:
    name: Build and Push to ECR
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:9.3.0
        env:
          MYSQL_DATABASE: climbx
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
          MYSQL_ROOT_PASSWORD: root_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        env:
          SPRING_PROFILES_ACTIVE: test
          DB_URL: jdbc:mysql://localhost:3306/climbx?serverTimezone=Asia/Seoul&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true
          DB_USER: test_user
          DB_PASSWORD: test_password
        run: ./gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building and pushing Docker image..."
          docker build -t ${{ secrets.ECR_REPOSITORY_URI }}:$IMAGE_TAG .
          docker tag ${{ secrets.ECR_REPOSITORY_URI }}:$IMAGE_TAG ${{ secrets.ECR_REPOSITORY_URI }}:latest
          
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:$IMAGE_TAG
          
          echo "âœ… Image successfully pushed to ECR"
